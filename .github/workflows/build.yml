name: Build ARM64 NAPI Module

on:
  push:
    tags:
      - 'v*' 


jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Install Cross Compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu pkg-config

      - name: Set cross-compiler env
        run: |
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV

      - name: Configure Cargo for Cross Compilation
        run: |
          mkdir -p .cargo
          echo '[target.aarch64-unknown-linux-gnu]' > .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml


      - name: Install QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Install dependencies
        run: yarn install

      - name: Build NAPI module for ARM64
        run: yarn build --target aarch64-unknown-linux-gnu

      - name: Check node output
        run: ls -lh target/aarch64-unknown-linux-gnu/release


      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: target/aarch64-unknown-linux-gnu/release/tokenizers.node
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

